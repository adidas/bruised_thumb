# Dont forget to set the environment variable "certdomain", and either fill in your email below or use an env variable for that too.
# certdomain can a comma delimited list
# Also note that this config is using the LetsEncrypt staging server, remove the flag when ready!
# Allow traffic on port 443
Resources:
    sslSecurityGroupIngress:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
            IpProtocol: tcp
            ToPort: 443
            FromPort: 443
            CidrIp: 0.0.0.0/0

    AWSEBAutoScalingGroup:
        Metadata:
            AWS::CloudFormation::Authentication:
                S3Auth:
                    type: "s3"
                    buckets: ["elasticbeanstalk-us-west-2-932847370652"]
                    roleName: 
                        "Fn::GetOptionSetting": 
                            Namespace: "aws:autoscaling:launchconfiguration"
                            OptionName: "IamInstanceProfile"
                            DefaultValue: "aws-elasticbeanstalk-ec2-role"

# Make an Apache config file for SSL
files:
    /etc/httpd/conf.d/ssl.pre:
        mode: "000644"
        owner: root
        group: root
        content: |
            LoadModule ssl_module modules/mod_ssl.so
            Listen 443

            Order deny,allow
            Allow from all

            SSLEngine on
            SSLCertificateFile "/etc/pki/tls/certs/server.crt"
            SSLCertificateKeyFile "/etc/pki/tls/certs/server.key"
            SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
            SSLProtocol All -SSLv2 -SSLv3
            SSLHonorCipherOrder On
            SSLSessionTickets Off

            Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
            Header always set X-Frame-Options DENY
            Header always set X-Content-Type-Options nosniff

            ProxyPass / http://localhost:80/ retry=0
            ProxyPassReverse / http://localhost:80/
            ProxyPreserveHost on
            RequestHeader set X-Forwarded-Proto "https" early
        # If you have pages that may take awhile to
        # respond, add a ProxyTimeout:
        # ProxyTimeout seconds

    /etc/pki/tls/certs/server.key:
        mode: "000400"
        owner: root
        group: root
        # authentication: "S3Auth"
        source: https://s3-us-west-2.amazonaws.com/elasticbeanstalk-us-west-2-932847370652/server.key

    /etc/pki/tls/certs/server.crt:
        mode: "000400"
        owner: root
        group: root
        # authentication: "S3Auth"
        source: https://s3-us-west-2.amazonaws.com/elasticbeanstalk-us-west-2-932847370652/server.crt



packages:
    yum:
        epel-release: []
        mod24_ssl : []

# Steps here
# 1. Install certbot
# 2. Get cert (stop apache before grabbing)
# 3. Link certs where Apache can grab
# 4. Get the Apache config in place
# 5. Move certbot-auto into tmp folder
container_commands:
#    10_installcertbot:
#        command: "wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto"
#    15_stophttpd:
#        command: "sudo service httpd stop"
#    20_getcert:
#        command: "sudo ./certbot-auto certonly --debug --non-interactive --email wpu.clark@gmail.com --agree-tos --standalone --domains ${certdomain} --keep-until-expiring --pre-hook \"service httpd stop\""
#    30_link:
#        command: "ln -sf /etc/letsencrypt/live/bruisedthumb.com /etc/letsencrypt/live/ebcert"
#    40_config:
#        command: "mv /etc/httpd/conf.d/ssl.pre /etc/httpd/conf.d/ssl.conf"
#    50_mv_certbot_to_temp_for_cron_renew:
#        command: "mv ./certbot-auto /tmp"
#    55_starthttpd:
#        command: "sudo service httpd start"
